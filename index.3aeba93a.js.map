{"mappings":"AAAA,IAAIA,OAAS,CACXC,UAAW,SAAUC,GACnB,OAAOC,KAAKC,KAAKF,E,GAIrB,SAASG,MAAMC,EAAOC,EAAMC,GAE1B,IADA,IAAIC,EAAQ,GACHC,EAAIJ,EAAOI,EAAIH,EAAMG,GAAKF,EAAMC,EAAME,KAAKD,GACpD,OAAOD,C,CAGT,SAASG,cAAcC,EAAKC,EAAQC,GAQlC,OAHQV,MAAM,EAAG,EAAG,EAAIQ,GAChBG,IAAIF,GAAQE,KALpB,SAAiBC,GACf,OAAOF,EAAaE,C,IASxB,SAASC,UAAUC,EAAQC,EAAUC,GACnC,IAAIC,EAAa,EACfT,EAAMM,EAAOI,OACbC,EAAKC,aAEP,WACE,IAAIC,EAAUP,EAAOG,GACnBK,EAAcL,IAAeT,EAAM,EAErCQ,EAAUK,EAASJ,EAAYH,GAE3BQ,EACFC,cAAcJ,GAEdF,G,GAXsBF,EAAWP,E,CAgBvC,SAASgB,MAAMZ,EAAOa,GACpB,OAAOC,OAAO5B,KAAK0B,MAAMZ,EAAQ,IAAMa,GAAY,KAAOA,E,CAG5D,SAASE,SAASC,GAChB,IAAIC,EAAcD,EAAQE,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KAExD,OADUC,WAAWF,E,CAIvB,SAASG,OAAOpB,GACd,OAAOA,EAAMqB,WAAWH,QAAQ,IAAK,I,CAKvC,SAASI,QAEC,GAAGC,MAAMC,KAAKC,SAASC,iBAAiB,uBAE5CC,SAAQ,SAAUC,GACpB,IAAIZ,EAAUY,EAAGC,WAAWC,YAAYC,OACtCC,EAAgBhB,EAAQiB,MAAM,KAAK,IAAM,GACzCC,EAAQnB,SAASC,GAGnBf,UAFWN,cAPH,IAOsBZ,OAAOC,UAAWkD,GAE9B,KAAM,SAAUzB,EAAShB,EAAGS,GAC5C,IAAIiC,EAAS1C,IAAMS,EAAOI,OAAS,EACjCN,EAAQY,MAAMH,EAASuB,EAAc1B,QACvCsB,EAAGC,WAAWC,YAAcK,EAASnB,EAAUI,OAAOpB,E,OAO5D,SAASoC,iBAAiBC,GACxB,IAAIC,EAAaC,OAAOC,YAEpBC,EADWJ,EAAQK,wBACDC,IACtB,QAAIF,EAAS,MACTA,EAASH,E,CAIf,IAAIM,iBAAmB,GAiBvB,SAASC,uBAAuBC,EAAWC,EAAMC,GAC/C,IAAIpB,EAAKH,SAASwB,eAAeH,GACjCF,iBAAiBlD,KAAK,CACpBkC,GAAIA,EACJsB,eAAgBH,EAChBI,gBAAiBH,G,CArBrBT,OAAOa,iBAAiB,UAAU,WAChCR,iBAAiBjB,SAAQ,SAAA0B,GACvB,IAAIC,EAASlB,iBAAiBiB,EAAKzB,IACnC,OAAIyB,EAAKzB,GAAGQ,mBAAqBkB,GAC/BD,EAAKzB,GAAGQ,kBAAmB,OAC3BiB,EAAKF,gBAAgBE,EAAKzB,MAGvByB,EAAKzB,GAAGQ,kBAAoBkB,GAC/BD,EAAKzB,GAAGQ,kBAAmB,OAC3BiB,EAAKH,eAAeG,EAAKzB,UAF3B,C,OAiBJiB,uBACE,UACA,SAAAjB,GACEN,O,IAEF,SAAAM,G","sources":["src/js/increasing-numbers.js"],"sourcesContent":["let easing = {\n  quadratic: function (x) {\n    return Math.sqrt(x);\n  },\n};\n\nfunction range(start, stop, step) {\n  let array = [];\n  for (let i = start; i < stop; i += step) array.push(i);\n  return array;\n}\n\nfunction interpolation(fps, easing, finalValue) {\n  function scaleIt(value) {\n    return finalValue * value;\n  }\n\n  let x = range(0, 1, 1 / fps),\n    y = x.map(easing).map(scaleIt);\n\n  return y;\n}\n\nfunction animateEl(values, duration, onAnimate) {\n  let frameIndex = 0,\n    fps = values.length,\n    id = setInterval(anime, duration / fps);\n\n  function anime() {\n    let current = values[frameIndex],\n      isLastFrame = frameIndex === fps - 1;\n\n    onAnimate(current, frameIndex, values);\n\n    if (isLastFrame) {\n      clearInterval(id);\n    } else {\n      frameIndex++;\n    }\n  }\n}\n\nfunction round(value, decimals) {\n  return Number(Math.round(value + 'e' + decimals) + 'e-' + decimals);\n}\n\nfunction unformat(content) {\n  let unlocalized = content.replace('.', '').replace(',', '.'),\n    value = parseFloat(unlocalized);\n  return value;\n}\n\nfunction format(value) {\n  return value.toString().replace('.', ',');\n}\n\n//\n\nfunction start() {\n  let fps = 120,\n    els = [].slice.call(document.querySelectorAll('.increasing-number'));\n\n  els.forEach(function (el) {\n    let content = el.firstChild.textContent.trim(),\n      decimalPlaces = content.split(',')[1] || '',\n      value = unformat(content),\n      values = interpolation(fps, easing.quadratic, value);\n\n    animateEl(values, 1000, function (current, i, values) {\n      let isLast = i === values.length - 1,\n        value = round(current, decimalPlaces.length);\n      el.firstChild.textContent = isLast ? content : format(value);\n    });\n  });\n}\n\n//\n\nfunction isOnVisibleSpace(element) {\n  let bodyHeight = window.innerHeight;\n  let elemRect = element.getBoundingClientRect();\n  let offset = elemRect.top; // - bodyRect.top;\n  if (offset < 0) return false;\n  if (offset > bodyHeight) return false;\n  return true;\n}\n\nlet listenedElements = [];\nwindow.addEventListener('scroll', function () {\n  listenedElements.forEach(item => {\n    let result = isOnVisibleSpace(item.el);\n    if (item.el.isOnVisibleSpace && !result) {\n      item.el.isOnVisibleSpace = false;\n      item.outVisibleSpace(item.el);\n      return;\n    }\n    if (!item.el.isOnVisibleSpace && result) {\n      item.el.isOnVisibleSpace = true;\n      item.inVisibleSpace(item.el);\n      return;\n    }\n  });\n});\n\nfunction onVisibleSpaceListener(elementId, cbIn, cbOut) {\n  let el = document.getElementById(elementId);\n  listenedElements.push({\n    el: el,\n    inVisibleSpace: cbIn,\n    outVisibleSpace: cbOut,\n  });\n}\n\nonVisibleSpaceListener(\n  'anchor',\n  el => {\n    start();\n  },\n  el => {\n    // тут вставляем код остановки анимации\n    // el.innerHTML = \"000000000000000000000000\";\n    // window.alert(\"элемент вне зоны видимости\");\n  }\n);\n"],"names":["easing","quadratic","x","Math","sqrt","range","start1","stop","step","array","i","push","interpolation","fps","easing1","finalValue","map","value","animateEl","values","duration","onAnimate","frameIndex","length","id","setInterval","current","isLastFrame","clearInterval","round","decimals","Number","unformat","content","unlocalized","replace","parseFloat","format","toString","start","slice","call","document","querySelectorAll","forEach","el","firstChild","textContent","trim","decimalPlaces","split","value1","isLast","isOnVisibleSpace","element","bodyHeight","window","innerHeight","offset","getBoundingClientRect","top","listenedElements","onVisibleSpaceListener","elementId","cbIn","cbOut","getElementById","inVisibleSpace","outVisibleSpace","addEventListener","item","result"],"version":3,"file":"index.3aeba93a.js.map"}